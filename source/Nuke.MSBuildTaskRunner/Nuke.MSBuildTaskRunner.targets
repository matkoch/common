<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <NukeTaskRunner>dotnet exec "$(MSBuildThisFileDirectory)$(MSBuildThisFileName).dll" --</NukeTaskRunner>
    <!--<NukeTaskRunner Condition="'$(MSBuildRuntimeType)' == 'Core'">dotnet exec "$(MSBuildThisFileDirectory)\netcore\$(MSBuildThisFileName).dll" &#45;&#45;</NukeTaskRunner>-->
    <!--<NukeTaskRunner Condition="'$(MSBuildRuntimeType)' == 'Full'">"$(MSBuildThisFileDirectory)\netfx\$(MSBuildThisFileName).exe"</NukeTaskRunner>-->
    <!--<NukeTaskRunner Condition="'$(MSBuildRuntimeType)' == 'Mono'">mono "$(MSBuildThisFileDirectory)\netfx\$(MSBuildThisFileName).exe"</NukeTaskRunner>-->
  </PropertyGroup>

  <Target
    Name="NukeCodeGeneration"
    AfterTargets="Restore"
    Condition="'@(NukeSpecificationFiles)' != ''">

    <Exec
      Command="$(NukeTaskRunner) --action CodeGeneration --files @(NukeSpecificationFiles)" />

  </Target>

  <Target
    Name="NukeExternalFilesDownload"
    AfterTargets="Restore"
    Condition="'@(NukeExternalFiles)' != ''">

    <Exec
      Command="$(NukeTaskRunner) --action ExternalFilesDownload --files @(NukeExternalFiles)" />

  </Target>

  <Target
    Name="NukeGlobalToolPackaging"
    BeforeTargets="GenerateNuspec"
    Condition="'$(PackAsTool)' == 'True'">

    <Exec
      Command="$(NukeTaskRunner) --action GlobalToolPackaging --target-framework @(_TargetFrameworks) --project-assets-file $(ProjectAssetsFile) --nuget-package-root $(NuGetPackageRoot)"
      ConsoleToMsBuild="true">
      <Output TaskParameter="ConsoleOutput" ItemName="_PackageFilesRaw" />
    </Exec>

    <ItemGroup>
      <_PackageFilesRaw Remove="%(_PackageFilesRaw.Identity)" Condition="$([System.String]::Copy('%(Identity)').StartsWith('error'))" />
      <_PackageFilesRaw Remove="%(_PackageFilesRaw.Identity)" Condition="$([System.String]::Copy('%(Identity)').StartsWith('warning'))" />

      <_PackageFilesRaw
        Part1="$([System.String]::Copy('%(Identity)').Split('@')[0].Trim())"
        Part2="$([System.String]::Copy('%(Identity)').Split('@')[1].Trim())" />

      <_PackageFiles
        Include="%(_PackageFilesRaw.Part1)"
        BuildAction="None"
        PackagePath="%(_PackageFilesRaw.Part2)"/>
    </ItemGroup>

  </Target>

</Project>
